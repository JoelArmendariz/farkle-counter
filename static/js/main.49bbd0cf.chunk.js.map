{"version":3,"sources":["Register.js","CommonRollControllers.js","OptionsControllers.js","Scores.js","Rules.js","GameButtons.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","marginBottom","Register","startGame","classes","useState","player1","setPlayer1","player2","setPlayer2","className","TextField","onChange","e","target","value","label","variant","Button","onClick","color","CommonRollControllers","handleScoreUpdate","player","ButtonGroup","size","OptionsControllers","handleUndo","marginTop","Scores","Typography","name","score","lineHeight","Rules","btnContainer","display","flexDirection","GameButtons","handleNewGame","handleRestart","App","state","isPlaying","updates","bind","this","setState","roll","lastUpdate","length","slice","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.49bbd0cf.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport { TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: '2rem',\n  },\n}));\n\nconst Register = ({ startGame }) => {\n  const classes = useStyles();\n  const [player1, setPlayer1] = useState('');\n  const [player2, setPlayer2] = useState('');\n\n  return (\n    <div className=\"register-container\">\n      <TextField\n        classes={{ root: classes.root }}\n        onChange={(e) => setPlayer1(e.target.value)}\n        label=\"Player 1\"\n        variant=\"outlined\"\n      />\n      <TextField\n        classes={{ root: classes.root }}\n        onChange={(e) => setPlayer2(e.target.value)}\n        label=\"player 2\"\n        variant=\"outlined\"\n      />\n      <Button\n        onClick={() => {\n          startGame(player1, player2);\n        }}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Submit\n      </Button>\n    </div>\n  );\n};\n\nexport default Register;\n","import React from 'react';\n\nimport { ButtonGroup, Button } from '@material-ui/core';\n\nconst CommonRollControllers = ({ handleScoreUpdate, player }) => {\n  return (\n    <div className=\"roll-controllers-container\">\n      <ButtonGroup className=\"btn-group\" size=\"small\" color=\"secondary\">\n        <Button onClick={() => handleScoreUpdate(-500, player)}>-500</Button>\n        <Button onClick={() => handleScoreUpdate(-100, player)}>-100</Button>\n        <Button onClick={() => handleScoreUpdate(50, player)}>+50</Button>\n        <Button onClick={() => handleScoreUpdate(100, player)}>+100</Button>\n        <Button onClick={() => handleScoreUpdate(200, player)}>+200</Button>\n        <Button onClick={() => handleScoreUpdate(300, player)}>+300</Button>\n        <Button onClick={() => handleScoreUpdate(400, player)}>+400</Button>\n      </ButtonGroup>\n      <ButtonGroup className=\"btn-group\" size=\"small\" color=\"secondary\">\n        <Button onClick={() => handleScoreUpdate(500, player)}>+500</Button>\n        <Button onClick={() => handleScoreUpdate(600, player)}>+600</Button>\n        <Button onClick={() => handleScoreUpdate(1000, player)}>+1000</Button>\n        <Button onClick={() => handleScoreUpdate(1500, player)}>+1500</Button>\n        <Button onClick={() => handleScoreUpdate(2000, player)}>+2000</Button>\n        <Button onClick={() => handleScoreUpdate(3000, player)}>+3000</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default CommonRollControllers;\n","import React from 'react';\n\nimport { ButtonGroup, Button } from '@material-ui/core';\n\nconst OptionsControllers = ({ handleScoreUpdate, handleUndo, player }) => {\n  return (\n    <div>\n      <ButtonGroup color=\"secondary\">\n        <Button onClick={() => handleUndo(player)}>Undo</Button>\n        {/* <Button onClick={() => handleScoreUpdate(-100, player)}>-100</Button>\n        <Button onClick={() => handleScoreUpdate(50, player)}>+50</Button>\n        <Button onClick={() => handleScoreUpdate(100, player)}>+100</Button> */}\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default OptionsControllers;\n","import React from 'react';\n\nimport CommonRollControllers from './CommonRollControllers';\nimport OptionsControllers from './OptionsControllers';\n\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: '1rem',\n    marginBottom: '1rem',\n  },\n}));\n\nconst Scores = ({ player1, player2, handleScoreUpdate, handleUndo }) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Typography classes={{ root: classes.root }} variant=\"h5\">\n        {player1.name}: {player1.score}\n      </Typography>\n      <CommonRollControllers\n        player={player1.name}\n        handleScoreUpdate={handleScoreUpdate}\n      />\n      <OptionsControllers handleUndo={handleUndo} player={player1.name} />\n      <Typography classes={{ root: classes.root }} variant=\"h5\">\n        {player2.name}: {player2.score}\n      </Typography>\n      <CommonRollControllers\n        player={player2.name}\n        handleScoreUpdate={handleScoreUpdate}\n      />\n      <OptionsControllers handleUndo={handleUndo} player={player2.name} />\n    </div>\n  );\n};\n\nexport default Scores;\n","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    lineHeight: 1.5,\n  },\n}));\n\nconst Rules = ({ handleScoreUpdate, player }) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <div className=\"rules-body\">\n        <Typography classes={{ root: classes.root }} variant=\"overline\">\n          Single 1 = 100\n        </Typography>\n        <Typography classes={{ root: classes.root }} variant=\"overline\">\n          Single 5 = 50\n        </Typography>\n        <Typography classes={{ root: classes.root }} variant=\"overline\">\n          Three 1’s = 300\n        </Typography>\n        <Typography classes={{ root: classes.root }} variant=\"overline\">\n          Three 2’s = 200\n        </Typography>\n        <Typography classes={{ root: classes.root }} variant=\"overline\">\n          Three 3’s = 300\n        </Typography>\n        <Typography classes={{ root: classes.root }} variant=\"overline\">\n          Three 4’s = 400\n        </Typography>\n        <Typography classes={{ root: classes.root }} variant=\"overline\">\n          Three 5’s = 500\n        </Typography>\n        <Typography classes={{ root: classes.root }} variant=\"overline\">\n          Three 6’s = 600\n        </Typography>\n        <Typography classes={{ root: classes.root }} variant=\"overline\">\n          Four of any number = 1,000\n        </Typography>\n        <Typography classes={{ root: classes.root }} variant=\"overline\">\n          Five of any number = 2,000\n        </Typography>\n        <Typography classes={{ root: classes.root }} variant=\"overline\">\n          Six of any number = 3,000\n        </Typography>\n        <Typography classes={{ root: classes.root }} variant=\"overline\">\n          1-6 straight = 1,500\n        </Typography>\n        <Typography classes={{ root: classes.root }} variant=\"overline\">\n          Three pairs = 1,500\n        </Typography>\n        <Typography classes={{ root: classes.root }} variant=\"overline\">\n          Four of any number with a pair = 1,500\n        </Typography>\n        <Typography classes={{ root: classes.root }} variant=\"overline\">\n          Two triplets = 2,500\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nexport default Rules;\n","import React from 'react';\n\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  btnContainer: {\n    marginTop: '0.5rem',\n    marginBottom: '0.5rem',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n}));\n\nconst GameButtons = ({ handleNewGame, handleRestart }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.btnContainer}>\n      <Button\n        variant=\"outlined\"\n        classes={{ root: classes.root }}\n        onClick={() => handleRestart()}\n      >\n        Restart Game\n      </Button>\n      <Button\n        variant=\"outlined\"\n        classes={{ root: classes.root }}\n        onClick={() => handleNewGame()}\n      >\n        New Game\n      </Button>\n    </div>\n  );\n};\n\nexport default GameButtons;\n","import React from 'react';\nimport './App.css';\n\nimport { Button } from '@material-ui/core';\n\nimport Register from './Register';\nimport Scores from './Scores';\nimport Rules from './Rules';\nimport GameButtons from './GameButtons';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isPlaying: false,\n      player1: {\n        name: '',\n        score: 0,\n        updates: [],\n      },\n      player2: {\n        name: '',\n        score: 0,\n        updates: [],\n      },\n    };\n    this.startGame = this.startGame.bind(this);\n    this.handleScoreUpdate = this.handleScoreUpdate.bind(this);\n    this.handleUndo = this.handleUndo.bind(this);\n    this.handleRestart = this.handleRestart.bind(this);\n    this.handleNewGame = this.handleNewGame.bind(this);\n  }\n\n  startGame(player1, player2) {\n    this.setState({\n      player1: {\n        name: player1,\n        score: 0,\n        updates: [],\n      },\n      player2: {\n        name: player2,\n        score: 0,\n        updates: [],\n      },\n      isPlaying: true,\n    });\n  }\n\n  handleScoreUpdate(roll, player) {\n    const { player1, player2 } = this.state;\n    if (player === player1.name) {\n      const { score, updates } = player1;\n      this.setState({\n        player1: {\n          ...player1,\n          score: score + roll,\n          updates: [...updates, roll],\n        },\n      });\n    } else {\n      const { score, updates } = player2;\n      this.setState({\n        player2: {\n          ...player2,\n          score: score + roll,\n          updates: [...updates, roll],\n        },\n      });\n    }\n  }\n\n  handleRestart() {\n    const { player1, player2 } = this.state;\n    this.setState({\n      player1: {\n        ...player1,\n        updates: [],\n        score: 0,\n      },\n      player2: {\n        ...player2,\n        updates: [],\n        score: 0,\n      },\n    });\n  }\n\n  handleNewGame() {\n    this.setState({\n      player1: {\n        name: '',\n        updates: [],\n        score: 0,\n      },\n      player2: {\n        name: '',\n        updates: [],\n        score: 0,\n      },\n      isPlaying: false,\n    });\n  }\n\n  handleUndo(player) {\n    const { player1, player2 } = this.state;\n    if (player === player1.name) {\n      const { updates, score } = player1;\n      const lastUpdate = -updates[updates.length - 1];\n      this.setState({\n        player1: {\n          ...player1,\n          score: score ? score + lastUpdate : score,\n          updates: updates.slice(0, updates.length - 1),\n        },\n      });\n    } else {\n      const { updates, score } = player2;\n      const lastUpdate = -updates[updates.length - 1];\n      this.setState({\n        player2: {\n          ...player2,\n          score: score ? score + lastUpdate : score,\n          updates: updates.slice(0, updates.length - 1),\n        },\n      });\n    }\n  }\n\n  render() {\n    const { player1, player2, isPlaying } = this.state;\n    return (\n      <div className=\"App\">\n        {!isPlaying ? (\n          <Register startGame={this.startGame} />\n        ) : (\n          <div className=\"game-container\">\n            <Scores\n              handleScoreUpdate={this.handleScoreUpdate}\n              handleUndo={this.handleUndo}\n              player1={player1}\n              player2={player2}\n            />\n            <GameButtons\n              handleRestart={this.handleRestart}\n              handleNewGame={this.handleNewGame}\n            />\n            <Rules />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}